{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1NtGqWBvj7nLpiT5UYIir6htr7ddSxWNw","timestamp":1656544599098},{"file_id":"1SwSs1xw20xRBn72buiPLRtvt4aO6dJDY","timestamp":1656368656116}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Análise Exploratória de Dados"],"metadata":{"id":"k_jfVOYMx0Ny"}},{"cell_type":"markdown","source":["### Importação das Bibliotecas"],"metadata":{"id":"rPUVmS-Dx5ze"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"bPpFOEiXDEiZ"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","\n","\n"]},{"cell_type":"markdown","source":["### Montando Google Drive"],"metadata":{"id":"yjoLTG3qeukY"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount ('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CY4ijvNJkcHo","executionInfo":{"status":"ok","timestamp":1658791372198,"user_tz":180,"elapsed":1814,"user":{"displayName":"Jefferson Tadeu Felix","userId":"00885711349442864618"}},"outputId":"ab5dba92-d531-412d-9ebd-0f154be4d1ba"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"markdown","source":["### Criando DataFrames a partir dos arquivos do Google Drive"],"metadata":{"id":"YSGLrrO_kriF"}},{"cell_type":"code","source":["churn = pd.read_csv('/content/drive/My Drive/Cursos/02-Tera_-_DataScience_e_MachineLearning/03-Projeto_Churn/BankChurners.csv')"],"metadata":{"id":"TXb9iG-j0jLc","executionInfo":{"status":"error","timestamp":1658791374530,"user_tz":180,"elapsed":243,"user":{"displayName":"Jefferson Tadeu Felix","userId":"00885711349442864618"}},"colab":{"base_uri":"https://localhost:8080/","height":362},"outputId":"288a7b71-48fc-499d-bb55-2b832b65d00f"},"execution_count":null,"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-11-293d5191963e>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mchurn\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/content/drive/My Drive/Cursos/02-Tera_-_DataScience_e_MachineLearning/03-Projeto_Churn/BankChurners.csv'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    309\u001b[0m                     \u001b[0mstacklevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstacklevel\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    310\u001b[0m                 )\n\u001b[0;32m--> 311\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    312\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    313\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mwrapper\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, error_bad_lines, warn_bad_lines, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options)\u001b[0m\n\u001b[1;32m    584\u001b[0m     \u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwds_defaults\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    585\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 586\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    587\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    588\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    480\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    481\u001b[0m     \u001b[0;31m# Create the parser.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 482\u001b[0;31m     \u001b[0mparser\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTextFileReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    483\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    484\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mchunksize\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0miterator\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m    809\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moptions\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"has_index_names\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"has_index_names\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    810\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 811\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    812\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    813\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_make_engine\u001b[0;34m(self, engine)\u001b[0m\n\u001b[1;32m   1038\u001b[0m             )\n\u001b[1;32m   1039\u001b[0m         \u001b[0;31m# error: Too many arguments for \"ParserBase\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1040\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mmapping\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moptions\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[call-arg]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1041\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1042\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_failover_to_python\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers/c_parser_wrapper.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, src, **kwds)\u001b[0m\n\u001b[1;32m     49\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     50\u001b[0m         \u001b[0;31m# open handles\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 51\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_open_handles\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msrc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     52\u001b[0m         \u001b[0;32massert\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhandles\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     53\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers/base_parser.py\u001b[0m in \u001b[0;36m_open_handles\u001b[0;34m(self, src, kwds)\u001b[0m\n\u001b[1;32m    227\u001b[0m             \u001b[0mmemory_map\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"memory_map\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    228\u001b[0m             \u001b[0mstorage_options\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"storage_options\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 229\u001b[0;31m             \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"encoding_errors\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"strict\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    230\u001b[0m         )\n\u001b[1;32m    231\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/common.py\u001b[0m in \u001b[0;36mget_handle\u001b[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[1;32m    705\u001b[0m                 \u001b[0mencoding\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mencoding\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    706\u001b[0m                 \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 707\u001b[0;31m                 \u001b[0mnewline\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    708\u001b[0m             )\n\u001b[1;32m    709\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '/content/drive/My Drive/Cursos/02-Tera_-_DataScience_e_MachineLearning/03-Projeto_Churn/BankChurners.csv'"]}]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rC7NuGdvqUsu","executionInfo":{"status":"ok","timestamp":1658791265261,"user_tz":180,"elapsed":2053,"user":{"displayName":"Jefferson Tadeu Felix","userId":"00885711349442864618"}},"outputId":"0bdacaa5-7a56-4c1f-fda3-d77acbdce2b5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"markdown","source":["### Informações gerais do dataset"],"metadata":{"id":"lH9tObBKzovx"}},{"cell_type":"code","source":[],"metadata":{"id":"Pc8VlldSqpCF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["churn.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":172},"id":"N_6Ob-vHzm2m","executionInfo":{"status":"error","timestamp":1658791305954,"user_tz":180,"elapsed":273,"user":{"displayName":"Jefferson Tadeu Felix","userId":"00885711349442864618"}},"outputId":"afbb606e-453e-475f-cdf6-95a31e4b4fa5"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-8-c2526bccfc91>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mchurn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minfo\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'churn' is not defined"]}]},{"cell_type":"markdown","source":["### Transformamos as variaveis Objetos em Categoricas a fim de facilitar as inferencias."],"metadata":{"id":"XcXyDUjIJihH"}},{"cell_type":"code","source":["churn.Surname = churn.Surname.astype('category')\n","churn.Geography = churn.Geography.astype('category')\n","churn.Gender = churn.Gender.astype('category')"],"metadata":{"id":"Z3nb5bRHhIad"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Verificamos os dados faltantes e notamos que o dataset esta limpo.\n"],"metadata":{"id":"Gg6KhZ1PKJRN"}},{"cell_type":"code","source":["churn.isnull()"],"metadata":{"id":"HRmEzqc-YP1h","colab":{"base_uri":"https://localhost:8080/","height":468},"executionInfo":{"status":"ok","timestamp":1656362815265,"user_tz":180,"elapsed":285,"user":{"displayName":"Jefferson Tadeu Felix","userId":"00885711349442864618"}},"outputId":"82fd45d0-a5e3-499e-8f22-1e402b659459"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      RowNumber  CustomerId  Surname  CreditScore  Geography  Gender    Age  \\\n","0         False       False    False        False      False   False  False   \n","1         False       False    False        False      False   False  False   \n","2         False       False    False        False      False   False  False   \n","3         False       False    False        False      False   False  False   \n","4         False       False    False        False      False   False  False   \n","...         ...         ...      ...          ...        ...     ...    ...   \n","9995      False       False    False        False      False   False  False   \n","9996      False       False    False        False      False   False  False   \n","9997      False       False    False        False      False   False  False   \n","9998      False       False    False        False      False   False  False   \n","9999      False       False    False        False      False   False  False   \n","\n","      Tenure  Balance  NumOfProducts  HasCrCard  IsActiveMember  \\\n","0      False    False          False      False           False   \n","1      False    False          False      False           False   \n","2      False    False          False      False           False   \n","3      False    False          False      False           False   \n","4      False    False          False      False           False   \n","...      ...      ...            ...        ...             ...   \n","9995   False    False          False      False           False   \n","9996   False    False          False      False           False   \n","9997   False    False          False      False           False   \n","9998   False    False          False      False           False   \n","9999   False    False          False      False           False   \n","\n","      EstimatedSalary  Exited  \n","0               False   False  \n","1               False   False  \n","2               False   False  \n","3               False   False  \n","4               False   False  \n","...               ...     ...  \n","9995            False   False  \n","9996            False   False  \n","9997            False   False  \n","9998            False   False  \n","9999            False   False  \n","\n","[10000 rows x 14 columns]"],"text/html":["\n","  <div id=\"df-840853e3-8db4-4ea0-b16e-b87f1abc8985\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>RowNumber</th>\n","      <th>CustomerId</th>\n","      <th>Surname</th>\n","      <th>CreditScore</th>\n","      <th>Geography</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Tenure</th>\n","      <th>Balance</th>\n","      <th>NumOfProducts</th>\n","      <th>HasCrCard</th>\n","      <th>IsActiveMember</th>\n","      <th>EstimatedSalary</th>\n","      <th>Exited</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>9995</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>9996</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>9997</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>9998</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>9999</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10000 rows × 14 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-840853e3-8db4-4ea0-b16e-b87f1abc8985')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-840853e3-8db4-4ea0-b16e-b87f1abc8985 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-840853e3-8db4-4ea0-b16e-b87f1abc8985');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["Aqui observamos a distribuição das variaveis\n","Para a variavel credito e Score temos uma distribuição levemente assimentrica\n","para a direita o que pode indicar uma boa pontuação para a maioria dos clientes;\n","Para a vairavel idade temos uma distribuição assimetrica para a esquerda o que indica que a maior parte dos cliente estão na faixa etaria enntre 20 e 40 anos;\n","A maioria dos clientes estão em posso dos seus cartões, a variavel Tenure nos indica isso;\n","Nossa variavel alvo é Exited que indica um percentual baixo de evasão."],"metadata":{"id":"1A_2yKhfAHM8"}},{"cell_type":"code","source":["churn.describe(percentiles = [.25, .5, .75]).round(2)"],"metadata":{"id":"C0CsesnfYPrN","colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"status":"ok","timestamp":1656362860095,"user_tz":180,"elapsed":290,"user":{"displayName":"Jefferson Tadeu Felix","userId":"00885711349442864618"}},"outputId":"55da47a1-14f7-47b0-c66a-246f1b456d32"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       RowNumber   CustomerId  CreditScore       Age    Tenure    Balance  \\\n","count   10000.00     10000.00     10000.00  10000.00  10000.00   10000.00   \n","mean     5000.50  15690940.57       650.53     38.92      5.01   76485.89   \n","std      2886.90     71936.19        96.65     10.49      2.89   62397.41   \n","min         1.00  15565701.00       350.00     18.00      0.00       0.00   \n","25%      2500.75  15628528.25       584.00     32.00      3.00       0.00   \n","50%      5000.50  15690738.00       652.00     37.00      5.00   97198.54   \n","75%      7500.25  15753233.75       718.00     44.00      7.00  127644.24   \n","max     10000.00  15815690.00       850.00     92.00     10.00  250898.09   \n","\n","       NumOfProducts  HasCrCard  IsActiveMember  EstimatedSalary   Exited  \n","count       10000.00   10000.00        10000.00         10000.00  10000.0  \n","mean            1.53       0.71            0.52        100090.24      0.2  \n","std             0.58       0.46            0.50         57510.49      0.4  \n","min             1.00       0.00            0.00            11.58      0.0  \n","25%             1.00       0.00            0.00         51002.11      0.0  \n","50%             1.00       1.00            1.00        100193.92      0.0  \n","75%             2.00       1.00            1.00        149388.25      0.0  \n","max             4.00       1.00            1.00        199992.48      1.0  "],"text/html":["\n","  <div id=\"df-58913630-d99f-4edc-9175-09de5dd474eb\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>RowNumber</th>\n","      <th>CustomerId</th>\n","      <th>CreditScore</th>\n","      <th>Age</th>\n","      <th>Tenure</th>\n","      <th>Balance</th>\n","      <th>NumOfProducts</th>\n","      <th>HasCrCard</th>\n","      <th>IsActiveMember</th>\n","      <th>EstimatedSalary</th>\n","      <th>Exited</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>10000.00</td>\n","      <td>10000.00</td>\n","      <td>10000.00</td>\n","      <td>10000.00</td>\n","      <td>10000.00</td>\n","      <td>10000.00</td>\n","      <td>10000.00</td>\n","      <td>10000.00</td>\n","      <td>10000.00</td>\n","      <td>10000.00</td>\n","      <td>10000.0</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>5000.50</td>\n","      <td>15690940.57</td>\n","      <td>650.53</td>\n","      <td>38.92</td>\n","      <td>5.01</td>\n","      <td>76485.89</td>\n","      <td>1.53</td>\n","      <td>0.71</td>\n","      <td>0.52</td>\n","      <td>100090.24</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>2886.90</td>\n","      <td>71936.19</td>\n","      <td>96.65</td>\n","      <td>10.49</td>\n","      <td>2.89</td>\n","      <td>62397.41</td>\n","      <td>0.58</td>\n","      <td>0.46</td>\n","      <td>0.50</td>\n","      <td>57510.49</td>\n","      <td>0.4</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.00</td>\n","      <td>15565701.00</td>\n","      <td>350.00</td>\n","      <td>18.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>1.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>11.58</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2500.75</td>\n","      <td>15628528.25</td>\n","      <td>584.00</td>\n","      <td>32.00</td>\n","      <td>3.00</td>\n","      <td>0.00</td>\n","      <td>1.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>51002.11</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>5000.50</td>\n","      <td>15690738.00</td>\n","      <td>652.00</td>\n","      <td>37.00</td>\n","      <td>5.00</td>\n","      <td>97198.54</td>\n","      <td>1.00</td>\n","      <td>1.00</td>\n","      <td>1.00</td>\n","      <td>100193.92</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>7500.25</td>\n","      <td>15753233.75</td>\n","      <td>718.00</td>\n","      <td>44.00</td>\n","      <td>7.00</td>\n","      <td>127644.24</td>\n","      <td>2.00</td>\n","      <td>1.00</td>\n","      <td>1.00</td>\n","      <td>149388.25</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>10000.00</td>\n","      <td>15815690.00</td>\n","      <td>850.00</td>\n","      <td>92.00</td>\n","      <td>10.00</td>\n","      <td>250898.09</td>\n","      <td>4.00</td>\n","      <td>1.00</td>\n","      <td>1.00</td>\n","      <td>199992.48</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-58913630-d99f-4edc-9175-09de5dd474eb')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-58913630-d99f-4edc-9175-09de5dd474eb button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-58913630-d99f-4edc-9175-09de5dd474eb');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["churn.hist(figsize=(14,10))"],"metadata":{"id":"NQhAATYDYOlb","colab":{"base_uri":"https://localhost:8080/","height":833},"executionInfo":{"status":"ok","timestamp":1656364486700,"user_tz":180,"elapsed":3438,"user":{"displayName":"Jefferson Tadeu Felix","userId":"00885711349442864618"}},"outputId":"118ddfa3-c05e-4bd5-8a7d-d0b9e3c00090"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7f16713e1090>,\n","        <matplotlib.axes._subplots.AxesSubplot object at 0x7f167045b5d0>,\n","        <matplotlib.axes._subplots.AxesSubplot object at 0x7f16703ffa90>],\n","       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f16703b5f90>,\n","        <matplotlib.axes._subplots.AxesSubplot object at 0x7f16703774d0>,\n","        <matplotlib.axes._subplots.AxesSubplot object at 0x7f167032d9d0>],\n","       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f1670363f50>,\n","        <matplotlib.axes._subplots.AxesSubplot object at 0x7f16703253d0>,\n","        <matplotlib.axes._subplots.AxesSubplot object at 0x7f1670325410>],\n","       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f16702dca10>,\n","        <matplotlib.axes._subplots.AxesSubplot object at 0x7f1670257350>,\n","        <matplotlib.axes._subplots.AxesSubplot object at 0x7f167020d850>]],\n","      dtype=object)"]},"metadata":{},"execution_count":21},{"output_type":"display_data","data":{"text/plain":["<Figure size 1008x720 with 12 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["Obsevamos a relação entre a nossa variavel alvo, Exited, e as demais\n","identificamos que pessoas na faixa etaria mais elevada, entre 50 e 60 anos tem u\n","tem uma grande evação, que os clientes com mais produtos também tem grande evasão.\n","Quanto maio o Score maior a permanecia\n","\n"],"metadata":{"id":"ZVvdaeYBF28x"}},{"cell_type":"code","source":["churn['Exited_cat']=churn['Exited'].replace([0,1],['Não','Sim'])\n","x_cont=['CreditScore','Balance','Age','EstimatedSalary','Tenure', 'NumOfProducts']\n"],"metadata":{"id":"EIoFjlruDhyc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["fig, ax = plt.subplots(1, 6, figsize=(22, 6));\n","churn[churn.Exited_cat == \"Não\"][x_cont].hist( bins=30, color=\"blue\", alpha=0.5, ax=ax);\n","churn[churn.Exited_cat == \"Sim\"][x_cont].hist( bins=30, color=\"red\", alpha=0.5, ax=ax);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":410},"id":"blVLJIXgEeFT","executionInfo":{"status":"ok","timestamp":1656365444928,"user_tz":180,"elapsed":2699,"user":{"displayName":"Jefferson Tadeu Felix","userId":"00885711349442864618"}},"outputId":"228d7ee7-5106-4523-bca8-d7b74c1a5000"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1584x432 with 6 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["#porcetagem de clientes que sairam \n","churn['Exited'].sum()/churn['Exited'].count()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f0VuOWq7INj6","executionInfo":{"status":"ok","timestamp":1656366427734,"user_tz":180,"elapsed":7,"user":{"displayName":"Jefferson Tadeu Felix","userId":"00885711349442864618"}},"outputId":"9ba044b2-63b4-4814-9981-0760018d9efa"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.2037"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["myred='#CD5C5C'\n","myblue='#6495ED'\n","mygreen='#90EE90'\n","cols= [myred, myblue,mygreen]"],"metadata":{"id":"ZWvYf2LoEfOT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sns.countplot(data=churn,x='Exited_cat',palette=cols);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":280},"id":"CdAkTkNrIgUt","executionInfo":{"status":"ok","timestamp":1656366513070,"user_tz":180,"elapsed":299,"user":{"displayName":"Jefferson Tadeu Felix","userId":"00885711349442864618"}},"outputId":"7e126d6e-61d4-4163-d85d-9651d17c4ab0"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAYsAAAEHCAYAAABfkmooAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAW5ElEQVR4nO3dfbRddX3n8fdHEJ9QCJBmaIINSzO26ChiFuDY6aiM4WGqoY44OFozlDauNdhWO63FdtYKokxx1KFolTaVYHA5AtJSUoeRpkHGcaYg4UEUkOGKUpIBciWAIBUNfueP87tycrmXfaB335tw36+1zjp7f/dv7/29rEs+dz+cfVJVSJL0RJ4x1w1IknZ9hoUkqZNhIUnqZFhIkjoZFpKkTnvOdQN9OOCAA2rp0qVz3YYk7Vauvfba71XVwqmWPS3DYunSpWzevHmu25Ck3UqSO6Zb5mkoSVInw0KS1MmwkCR1MiwkSZ0MC0lSp17DIsl7k9yU5JtJPp/k2UkOTnJ1krEkFybZq419Vpsfa8uXDm3n/a1+a5Kj++xZkvR4vYVFksXAbwHLq+plwB7AicCHgbOq6sXAfcDJbZWTgfta/aw2jiSHtPVeChwDfCrJHn31LUl6vL5PQ+0JPCfJnsBzgbuA1wMXt+XrgePb9Mo2T1t+VJK0+gVV9UhVfQcYAw7vuW9J0pDewqKqtgIfBf6eQUg8AFwL3F9VO9qwLcDiNr0YuLOtu6ON33+4PsU6P5VkdZLNSTaPj4/P/A8kSfNYb5/gTrKAwVHBwcD9wBcYnEbqRVWtBdYCLF++3G900tPW+/7823PdgnZB/+U3XtTr9vs8DfWvgO9U1XhV/Rj4S+A1wL7ttBTAEmBrm94KHATQlu8D3Dtcn2IdSdIs6DMs/h44Mslz27WHo4CbgS8Db2ljVgGXtukNbZ62/IoafOfrBuDEdrfUwcAy4Gs99i1JmqS301BVdXWSi4HrgB3A9QxOE/134IIkH2q1c9sq5wKfTTIGbGdwBxRVdVOSixgEzQ7glKp6tK++JUmP1+tTZ6tqDbBmUvl2pribqap+CJwwzXbOAM6Y8QYlSSPxE9ySpE6GhSSpk2EhSepkWEiSOhkWkqROhoUkqZNhIUnqZFhIkjoZFpKkToaFJKmTYSFJ6mRYSJI6GRaSpE6GhSSpk2EhSepkWEiSOhkWkqROvYVFkpckuWHo9f0k70myX5KNSW5r7wva+CT5eJKxJDcmOWxoW6va+NuSrJp+r5KkPvQWFlV1a1UdWlWHAq8CHgYuAU4FNlXVMmBTmwc4FljWXquBcwCS7Mfgq1mPYPB1rGsmAkaSNDtm6zTUUcC3q+oOYCWwvtXXA8e36ZXA+TVwFbBvkgOBo4GNVbW9qu4DNgLHzFLfkiRmLyxOBD7fphdV1V1t+m5gUZteDNw5tM6WVpuuvpMkq5NsTrJ5fHx8JnuXpHmv97BIshfwJuALk5dVVQE1E/upqrVVtbyqli9cuHAmNilJambjyOJY4LqquqfN39NOL9Het7X6VuCgofWWtNp0dUnSLJmNsHgbj52CAtgATNzRtAq4dKj+znZX1JHAA+101eXAiiQL2oXtFa0mSZole/a58STPA94AvGuofCZwUZKTgTuAt7b6ZcBxwBiDO6dOAqiq7Uk+CFzTxp1eVdv77FuStLNew6KqfgDsP6l2L4O7oyaPLeCUabazDljXR4+SpG5+gluS1MmwkCR1MiwkSZ0MC0lSJ8NCktTJsJAkdTIsJEmdDAtJUifDQpLUybCQJHUyLCRJnQwLSVInw0KS1MmwkCR1MiwkSZ0MC0lSJ8NCktSp17BIsm+Si5N8K8ktSV6dZL8kG5Pc1t4XtLFJ8vEkY0luTHLY0HZWtfG3JVk1/R4lSX3o+8jibOBLVfXzwCuAW4BTgU1VtQzY1OYBjgWWtddq4ByAJPsBa4AjgMOBNRMBI0maHb2FRZJ9gF8CzgWoqh9V1f3ASmB9G7YeOL5NrwTOr4GrgH2THAgcDWysqu1VdR+wETimr74lSY/X55HFwcA4cF6S65N8OsnzgEVVdVcbczewqE0vBu4cWn9Lq01X30mS1Uk2J9k8Pj4+wz+KJM1vfYbFnsBhwDlV9UrgBzx2ygmAqiqgZmJnVbW2qpZX1fKFCxfOxCYlSU2fYbEF2FJVV7f5ixmExz3t9BLtfVtbvhU4aGj9Ja02XV2SNEt6C4uquhu4M8lLWuko4GZgAzBxR9Mq4NI2vQF4Z7sr6kjggXa66nJgRZIF7cL2ilaTJM2SPXve/m8Cn0uyF3A7cBKDgLooycnAHcBb29jLgOOAMeDhNpaq2p7kg8A1bdzpVbW9574lSUN6DYuqugFYPsWio6YYW8Ap02xnHbBuZruTJI3KT3BLkjoZFpKkToaFJKmTYSFJ6mRYSJI6GRaSpE6GhSSpk2EhSepkWEiSOhkWkqROhoUkqZNhIUnqZFhIkjoZFpKkToaFJKmTYSFJ6mRYSJI69RoWSb6b5BtJbkiyudX2S7IxyW3tfUGrJ8nHk4wluTHJYUPbWdXG35Zk1XT7kyT1YzaOLF5XVYdW1cTXq54KbKqqZcCmNg9wLLCsvVYD58AgXIA1wBHA4cCaiYCRJM2OuTgNtRJY36bXA8cP1c+vgauAfZMcCBwNbKyq7VV1H7AROGa2m5ak+azvsCjgb5Jcm2R1qy2qqrva9N3Aoja9GLhzaN0trTZdfSdJVifZnGTz+Pj4TP4MkjTv7dnz9n+xqrYm+RlgY5JvDS+sqkpSM7GjqloLrAVYvnz5jGxTkjTQ65FFVW1t79uASxhcc7innV6ivW9rw7cCBw2tvqTVpqtLkmZJb2GR5HlJnj8xDawAvglsACbuaFoFXNqmNwDvbHdFHQk80E5XXQ6sSLKgXdhe0WqSpFnS52moRcAlSSb289+q6ktJrgEuSnIycAfw1jb+MuA4YAx4GDgJoKq2J/kgcE0bd3pVbe+xb0nSJL2FRVXdDrxiivq9wFFT1As4ZZptrQPWzXSPkqTR+AluSVInw0KS1MmwkCR1MiwkSZ1GCoskm0apSZKenp7wbqgkzwaeCxzQPuOQtugFTPHIDUnS01PXrbPvAt4D/CxwLY+FxfeBP+mxL0nSLuQJw6KqzgbOTvKbVfWJWepJkrSLGelDeVX1iST/HFg6vE5Vnd9TX5KkXchIYZHks8CLgBuAR1u5AMNCkuaBUR/3sRw4pD2SQ5I0z4z6OYtvAv+kz0YkSbuuUY8sDgBuTvI14JGJYlW9qZeuJEm7lFHD4rQ+m5Ak7dpGvRvqf/bdiCRp1zXq3VAPMrj7CWAv4JnAD6rqBX01JknadYx6ZPH8iekMvvpuJXBkX01JknYtT/qpszXwV8DRo4xPskeS65N8sc0fnOTqJGNJLkyyV6s/q82PteVLh7bx/la/NclI+5UkzZxRT0O9eWj2GQw+d/HDEffx28AtDB4+CPBh4KyquiDJnwInA+e09/uq6sVJTmzj/m2SQ4ATgZcyeEbV3yb5p1X16OQdSZL6MeqRxRuHXkcDDzI4FfWEkiwB/jXw6TYf4PXAxW3IeuD4Nr2yzdOWHzV0yuuCqnqkqr4DjAGHj9i3JGkGjHrN4qSnuP0/Bt4HTFzz2B+4v6p2tPktPPao88XAnW1/O5I80MYvBq4a2ubwOj+VZDWwGuCFL3zhU2xXkjSVUb/8aEmSS5Jsa6+/aEcNT7TOLwPbquraGem0Q1WtrarlVbV84cKFs7FLSZo3Rj0NdR6wgcE1g58F/rrVnshrgDcl+S5wAYPTT2cD+yaZOKJZAmxt01uBgwDa8n2Ae4frU6wjSZoFo4bFwqo6r6p2tNdngCf8872q3l9VS6pqKYML1FdU1duBLwNvacNWAZe26Q1tnrb8ivbgwg3Aie1uqYOBZcDXRuxbkjQDRg2Le5O8o90Gu0eSdzD4q/+p+H3gd5KMMbgmcW6rnwvs3+q/A5wKUFU3ARcBNwNfAk7xTihJml2jPhvq14BPAGcx+CT3/wH+/ag7qaorgSvb9O1McTdTVf0QOGGa9c8Azhh1f5KkmTVqWJwOrKqq+wCS7Ad8lEGISJKe5kY9DfXyiaAAqKrtwCv7aUmStKsZNSyekWTBxEw7shj1qESStJsb9R/8jwF/l+QLbf4EvIYgSfPGqJ/gPj/JZgaflQB4c1Xd3F9bkqRdycinklo4GBCSNA896UeUS5LmH8NCktTJsJAkdTIsJEmdDAtJUifDQpLUybCQJHUyLCRJnQwLSVInw0KS1MmwkCR16i0skjw7ydeSfD3JTUk+0OoHJ7k6yViSC5Ps1erPavNjbfnSoW29v9VvTXJ0Xz1LkqbW55HFI8Drq+oVwKHAMUmOBD4MnFVVLwbuA05u408G7mv1s9o4khwCnAi8FDgG+FSSPXrsW5I0SW9hUQMPtdlntlcxeMz5xa2+Hji+Ta9s87TlRyVJq19QVY9U1XeAMab4Dm9JUn96vWaRZI8kNwDbgI3At4H7q2pHG7IFWNymFwN3ArTlDwD7D9enWGd4X6uTbE6yeXx8vI8fR5LmrV7DoqoerapDgSUMjgZ+vsd9ra2q5VW1fOHChX3tRpLmpVm5G6qq7ge+DLwa2DfJxJcuLQG2tumtwEEAbfk+wL3D9SnWkSTNgj7vhlqYZN82/RzgDcAtDELjLW3YKuDSNr2hzdOWX1FV1eontrulDgaWAV/rq29J0uON/LWqT8GBwPp259IzgIuq6otJbgYuSPIh4Hrg3Db+XOCzScaA7QzugKKqbkpyEYOvdN0BnFJVj/bYtyRpkt7CoqpuBF45Rf12pribqap+CJwwzbbOAM6Y6R4lSaPxE9ySpE6GhSSpk2EhSepkWEiSOhkWkqROhoUkqZNhIUnqZFhIkjoZFpKkToaFJKmTYSFJ6mRYSJI6GRaSpE6GhSSpk2EhSepkWEiSOhkWkqROfX4H90FJvpzk5iQ3JfntVt8vycYkt7X3Ba2eJB9PMpbkxiSHDW1rVRt/W5JV0+1TktSPPo8sdgD/saoOAY4ETklyCHAqsKmqlgGb2jzAscCy9loNnAODcAHWAEcw+DrWNRMBI0maHX1+B/ddwF1t+sEktwCLgZXAa9uw9cCVwO+3+vlVVcBVSfZNcmAbu7GqtgMk2QgcA3y+r94BrjzllD43r93Uaz/5ybluQZoTs3LNIslS4JXA1cCiFiQAdwOL2vRi4M6h1ba02nT1yftYnWRzks3j4+Mz2r8kzXe9h0WSvYG/AN5TVd8fXtaOImom9lNVa6tqeVUtX7hw4UxsUpLU9BoWSZ7JICg+V1V/2cr3tNNLtPdtrb4VOGho9SWtNl1dkjRL+rwbKsC5wC1V9V+HFm0AJu5oWgVcOlR/Z7sr6kjggXa66nJgRZIF7cL2ilaTJM2S3i5wA68BfhX4RpIbWu0PgDOBi5KcDNwBvLUtuww4DhgDHgZOAqiq7Uk+CFzTxp0+cbFbkjQ7+rwb6qtApll81BTjC5jyFqSqWgesm7nuJElPhp/gliR1MiwkSZ0MC0lSJ8NCktTJsJAkdTIsJEmdDAtJUifDQpLUybCQJHUyLCRJnQwLSVInw0KS1MmwkCR1MiwkSZ0MC0lSJ8NCktTJsJAkderzO7jXJdmW5JtDtf2SbExyW3tf0OpJ8vEkY0luTHLY0Dqr2vjbkqyaal+SpH71eWTxGeCYSbVTgU1VtQzY1OYBjgWWtddq4BwYhAuwBjgCOBxYMxEwkqTZ01tYVNVXgO2TyiuB9W16PXD8UP38GrgK2DfJgcDRwMaq2l5V9wEbeXwASZJ6NtvXLBZV1V1t+m5gUZteDNw5NG5Lq01Xf5wkq5NsTrJ5fHx8ZruWpHluzi5wV1UBNYPbW1tVy6tq+cKFC2dqs5IkZj8s7mmnl2jv21p9K3DQ0LglrTZdXZI0i2Y7LDYAE3c0rQIuHaq/s90VdSTwQDtddTmwIsmCdmF7RatJkmbRnn1tOMnngdcCByTZwuCupjOBi5KcDNwBvLUNvww4DhgDHgZOAqiq7Uk+CFzTxp1eVZMvmkuSetZbWFTV26ZZdNQUYws4ZZrtrAPWzWBrkqQnyU9wS5I6GRaSpE6GhSSpk2EhSepkWEiSOhkWkqROhoUkqZNhIUnqZFhIkjoZFpKkToaFJKmTYSFJ6mRYSJI6GRaSpE6GhSSpk2EhSepkWEiSOu02YZHkmCS3JhlLcupc9yNJ88luERZJ9gA+CRwLHAK8Lckhc9uVJM0fu0VYAIcDY1V1e1X9CLgAWDnHPUnSvLHnXDcwosXAnUPzW4AjhgckWQ2sbrMPJbl1lnqbDw4AvjfXTewSPvWpue5AO/N3s/nI6u4xI/i56RbsLmHRqarWAmvnuo+noySbq2r5XPchTebv5uzZXU5DbQUOGppf0mqSpFmwu4TFNcCyJAcn2Qs4Edgwxz1J0ryxW5yGqqodSd4NXA7sAayrqpvmuK35xNN72lX5uzlLUlVz3YMkaRe3u5yGkiTNIcNCktTJsBBJ/jDJTUluTHJDkiOSfNpPyWuuJakkHxua/90kp7XpvZJclmRTkj+dsybnid3iArf6k+TVwC8Dh1XVI0kOAPaqql+f49YkgEeANyf5o6ra6cN37WkOx81NW/OPRxY6EPheVT0CUFXfq6r/l+TKJMsBkjyU5CPt6ONvkxzelt+e5E1z2r2e7nYwuOPpvZMXJHljkquTXN9+Lxe1+n5J/qodKV+V5OWz3fTTkWGhvwEOSvJ/k3wqyb+cYszzgCuq6qXAg8CHgDcAvwKcPnutap76JPD2JPtMqn8VOLKqXsngeXHva/UPANdX1cuBPwDOn7VOn8Y8DTXPVdVDSV4F/AvgdcCFUzwC/kfAl9r0N4BHqurHSb4BLJ21ZjUvVdX3k5wP/BbwD0OLljD4fT0Q2Av4Tqv/IvBv2rpXJNk/yQuq6vuz2ffTjUcWoqoeraorq2oN8G7a/2hDflyPfSDnJwzOI1NVP8E/ODQ7/hg4mcFR7oRPAH9SVf8MeBfw7LlobL4wLOa5JC9JsmyodChwx1z1I02lqrYDFzEIjAn78Ngz4lYN1f8X8HaAJK9lcE3Oo4p/JMNCewPrk9yc5EYGXy512ty2JE3pYwweST7hNOALSa5l58eUnwa8qv0+n8nOQaKnyMd9SJI6eWQhSepkWEiSOhkWkqROhoUkqZNhIUnqZFhIkjoZFtKQJI+2x7RPvCY/+mTy+MuS7Nte/+Ep7O+0JL/71DveaVtPqQdpFH7OQhqS5KGq2vsprLcU+GJVvexJrnca8FBVffTJ7nOmepBG4ZGF1CHJPkluTfKSNv/5JL/Rpr/bvgPkTOBF7WjkI23Z7yW5pj0q+wND2/vD9pTfrwIv6dj3i9vjt7+e5LokL0qyd/vCn+uSfCPJyjb8cT1IM8WHwEk7e06SG4bm/6iqLkzybuAzSc4GFlTVn09a71TgZVV1KECSFcAy4HAgwIYkvwT8ADiRwTO49gSuA659gn4+B5xZVZckeTaDP/B+BPxKexrrAcBVSTZM7kGaSYaFtLN/mOof26ramOQEBt+t8IoRtrOiva5v83szCI/nA5dU1cMA7R/5KSV5PrC4qi5pPfyw1Z8J/OcWPj8BFgOLRvvxpKfGsJBGkOQZwC8ADwMLgC1dqzA4KvmzSdt5zwy083ZgIfCq9r0i38XHc6tnXrOQRvNe4Bbg3wHntb/uhz3I4KhhwuXAryXZGyDJ4iQ/A3wFOD7Jc9qRwxun22FVPQhsSXJ828azkjyXwaO5t7WgeB3wc9P0IM0YjyyknU2+ZvEl4Dzg14HDq+rBJF8B/hOwZmJQVd2b5H8n+SbwP6rq95L8AvB3SQAeAt5RVdcluRD4OrANuKajn18F/izJ6cCPgRMYXMf46/ZNhZuBb03Xwz/yv4X0U946K0nq5GkoSVInT0NJu4AknwReM6l8dlWdNxf9SJN5GkqS1MnTUJKkToaFJKmTYSFJ6mRYSJI6/X8m9pOv1yr6DQAAAABJRU5ErkJggg==\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["20% sairam"],"metadata":{"id":"20ZozqypI1o8"}},{"cell_type":"markdown","source":[],"metadata":{"id":"v2U9P18QxxOm"}},{"cell_type":"markdown","source":["Analisaremos o comportamento de saida relacionando-o com as categorias"],"metadata":{"id":"-GU2eMj0LGAS"}},{"cell_type":"code","source":[],"metadata":{"id":"IHQkuqjAI1V7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sns.set(rc={'figure.figsize': (10, 10)})\n","sns.heatmap(churn.corr(), annot=True, fmt='.1g', vmin=-1, vmax=1, center=0, cmap='coolwarm')"],"metadata":{"id":"tqOh3j-aps6G"},"execution_count":null,"outputs":[]}]}